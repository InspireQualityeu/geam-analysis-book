---
author:
  - name: Jörg Müller

format: 
   html:
     df-print: kable
      
execute: 
    echo: true
    warning: false
    message: false

abstract: >
    The following chapter provides an example on how to carry out an intersectional analysis of the GEAM data, using the MAIHDA approach, Multilevel Analysis of Individual Heterogeneity and Discriminatory Accuracy. 

keywords: 
  - intersectionality
  - Latent Class Analysis
  - MAIHDA
---

# Intersectionality {#sec-ch06-intersectional}


```{r}
#| label: setup 
#| echo: false

library(ggeffects)   # predictions and significance testing
library(insight)     # extracting random effects variances
library(datawizard)  # data wrangling and preparation
library(parameters)  # model summaries
library(performance) # model fit indices, ICC
library(report)


#library(glmmTMB)     # multilevel modelling

library(tidyverse)
library(sjmisc)
library(sjPlot)
library(gpg)         # use encryption

library(knitr)
library(kableExtra)

source("util/common.R")
source("util/encrypt.R")

# at the start of the session, need to execute this first time manually to get password callback
df.geam03 <-read_gpg("data/df.349312.en.rdata.gpg")

```


The GEAM questionnaire collects a variety of socio-demographic data that can be used for an intersectional analysis. As described in more detail in @sec-ch02-respondents, socio-demographic data include gender, age, sexual orientation, ethnic minority status, disability and/or health impairments, educational level, socio-economic class, partnership status, and transgender status. 

Following an intersectional analytical lens, we want to understand how combination of these socio-demographic categories affect specific outcomes, such as for example experiences of discrimination, harassment, job satisfaction, or other outcomes. 

Exploring intersectional effects is not limited to socio-demographic variables but can be extended to include additional variables such as for example working conditions (e.g. type of contract) or care responsibilities. 


## MAIHDA 

The Multilevel Analysis of Individual Heterogeneity and Discriminatory Accuracy (MAIHDA) is a statistical approach to study how different socio-demographic (e.g. gender, age, socioeconomis status) and other categories (e.g., neighborhood) intersect and affect individual outcomes. While multilevel models in general are well established to explore nested structures such as people within neighborhoods, cities, or countries, MAIHDA uses this logic to model how people pertain to specific strata, defined as a combination of multiple social categories. As a result, it not only provides information regarding the overall intersectional effects but also information on the discriminatory accuracy of these strata for predicting individual outcomes. This makes it particularly useful for studying inequalities in health, education, and other social outcomes.

Whereas traditional regression models can be used for exploring intersectional effects between several socio-demographic variables such as gender, age, race/ethnicity, they are limited in terms of the number of categories to combine, the sample size, model parsimony and scalability [@evansMultilevel2018]. In contrast, the MAIHDA approach partitions the variance within and between these strata, and thus can identify unique intersectional effects and provide precise estimates even for small groups.

The approach pioneered by Clare Evans and others [@evansMultilevel2018, @merloMultilevel2018] to identify intersectional effects, for example with regards to inequalities in health [@axelssonfiskChronic2018], mental health [@evansIntersectionality2019], eating disorders [@becciaEatingrelated2021] or educational outcomes [@kellerEducational2023]. 

Described as the new "gold standard" for studying intersectional inequalities [@merloMultilevel2018], several tutorials are available to implement a MAIHDA approach [@evansTutorial2024, @kellerEducational2023] using R and other environments. 

The following example follows the tutorial of the [ggeffects package]([https://strengejacke.github.io/ggeffects/articles/practical_intersectionality.html) which presents code for carrying out an intersectional analysis using [EUROFAMCARE](https://cordis.europa.eu/article/id/83657-studies-of-family-carers-of-older-people) data, a study of family cares of older people in Europe. 


In a first example, we explore how **gender**, **disability/health** and **age** affects experience of microaggressions. We hypothesize that older age in combination with a disability/health condition and gender (being a women) identifies a group of employees that experience higher microaggressions. 


### Preprocess data

First, socio-demographic variables need to be preprocessed as described in @sec-ch02-respondents. In a second step, the categories of the selected socio-demographic variables are combined to form the intersectional strata. 

To start, we remove partial questionnaires. Those respondents who did not reach the end of the survey and press the submit-button have a `NA` entry in the `submitdate` and can be removed. 

::: callout-note
Partial GEAM submissions might still hold useful data, depending on which page the user abandonded the questionnaire. Depending on which combinations of variables are of interest, a more nuanced filterting should be carried out. Removing incomplete submissions does not guarantee that any of the selected variables used for further analysis does not contain missing data. 
:::

```{r}
#| label: tbl-filter-partial
#| tbl-cap: "Overivew partial and total questionnaire submissions"


# check how many partial submissions 
df.geam03 |>
  group_by(submitdate) |>
  summarise(Total = n()) |>
  mutate(Complete = c("Yes", "No"))


# remove partial submissions
df.geam <- df.geam03 |>
  filter(!is.na(submitdate))

```

Next, after removing incomplete submissions, we pepare our main socio-demographic variables. Although the MAIHDA approach can handle small N in specific intersecting strata better than other approaches, too few respondents in subgroups remain a challenge [@evansTutorial2024]. Hence, the choice of categories to be combine should make sense theoretically while respecting practical modeling and data limitations. 

Small N problem remains an issue especially with GEAM data, where typical samples within an organisation do not surpass N=1000 responses. For comparison, @evansTutorial2024 simulated dataset has N=33000 responses, while @kellerEducational2023 use N=5451 students. 

Following these practical and theoretical guidelines, we pre-process our three main socio-demographic variables in the following way: 

First, **gender**. Exploring raw responses in @tbl-sdem004-gender-raw shows that for `SDEM004` there is only 1 "Non-binary" answer while 17 respondents "Prefer not to say". 

```{r}
#| label: tbl-sdem004-gender-raw 
#| code-fold: false
#| tbl-cap: "Frequency table of raw SDEM004 - Gender"
#| cap-location: margin

tblx <- df.geam |>
  data_tabulate(SDEM004) 

as.data.frame(tblx[1]) |>
  mutate(across(where(is.numeric),round,2))

```

In order to reduce the number of categories in our strata, we remove "non-binary" and "prefer not to say". The new variable is renamed from `SDEM004` to `gender`. 


```{r}
#| label: code-SDEM004-bin
#| code-fold: true
#| code-summary: Click to see preprocessing code for SDEM004

# create binary gender variable 
df.geam <- df.geam |>
  mutate(SDEM004.bin = if_else((SDEM004 == "Non-binary" | SDEM004 == "Prefer not to say"), 
                               NA_character_, SDEM004))

# re-convert to factor
df.geam$gender <- factor(df.geam$SDEM004.bin)

```


Second, **disability and health impairments** (`SDEM009`) contains 30 respondents that prefer not to answer.

```{r}
#| label: tbl-sdem009-disability-raw 
#| code-fold: false
#| tbl-cap: "Frequency table of raw SDEM009 - Disability and health impairments"
#| cap-location: margin

df.geam |>
  data_tabulate(SDEM004) |>
  kbl()

```

We remove those 30 respondents from the dataset, before constructing the intersectional strata.  

```{r}
#| label: code-SDEM009-disability
#| code-fold: true
#| code-summary: Click to unfold preprocessing code for SDEM009

df.geam <- df.geam |>
  mutate(SDEM009.bin = if_else(SDEM009 == "Prefer not to say",
                               NA_character_, SDEM009))

# reconvert to factor
df.geam$disability <- factor(df.geam$SDEM009.bin)
```


Third, **age**. Introducing a slight variation to the procedure described in [@sec-summary-ch02-age] we have created a variable `age_3g` that aggregates the age of respondents into 3 groups: Junior (<30 years), Middle (31-45 years), and senior (> 46 years). 

```{r}
#| label: code-sdem001-age
#| code-fold: true
#| code-summary: Click to see preprocessing for age groups

# create three age groups: junior, middle, senior
df.geam <- df.geam |>
  mutate(age_3g = case_when(
    age <=30 ~ "Junior (<=30)", 
    age > 30 & age <=45 ~ "Middle (31-45)",
    age > 45  ~ "Senior (>45)",
    .default = NA
  ))

# reconvert to factor
df.geam$age_3g <- factor(df.geam$age_3g)

```

Which produces the following three age groups. The organisation has relatively few junior employees, with most employees in our sample belonging to the Senior group, with 45 or more years. 

```{r}
#| label: tbl-sdem001-age_3g
#| code-fold: false
#| tbl-cap: "Frequency table of 3 age groups"
#| cap-location: margin

df.geam |>
 data_tabulate(age_3g) |>
 kbl()

```


Finally, as our **outcome variable** we use items that form part of the **microaggression** scale (`BIMA001`), see @sec-annex-microaggression. For each row/respondent, we calculate the average score across all 11 microaggression items (see @sec-annex-i-microaggression for items). 

```{r}
#| label: code-mean-microaggression

df.geam <- df.geam |>
  rowwise() |>
  mutate(microscore = 
           mean(
             as.numeric(
               c_across(
                 starts_with("BIMA001.SQ"))), na.rm=T))

```



This provides the following summary statistics on our three main socio-demographic variables. 

```{r}
#| label: tbl-stats-sample
#| 
df.geam |>
  select(gender, disability, age_3g) |>
  report_table() |>
  kbl()

```


### Define intersectional strata

Socio-demographic variables need to be **combined to create the intersectional strata** for the intersectional analysis. In total, the combination of 2 categories for gender (woman, man), 2 categories for disability (Yes, No) and three for age generates 2 x 2 x 3 = 12 strata. 

```{r}
#| label: code-create-strata


# generate strata by combining gender, disabilty and age for each row (respondent)
# any NA entry by the respondent in gender, disability and ses, causes NA entry for this strata
df.geam <- df.geam |>
  mutate(strata12 = 
           if_else(
             (is.na(gender) | is.na(disability) | is.na(age_3g)),
             NA_character_, 
             paste0(gender, ", ", disability, ", ", age_3g))
         )


# convert strata into a factor variable
df.geam$strata12 <- factor(df.geam$strata12)

# calculate percent of strata with less than 20 respondents for 12 subgroups
Strata12 <- df.geam |>
  group_by(strata12) |>
  summarize(strataN = n())


# percent values of strata that have less than 10 respondents
low12 <- round((sum(Strata12$strataN < 10) / 12)*100,0)  

```

Each respondents has been assigned the strata (or group) which correspondes to the respondents particular combination of gender, disability and age group. @tbl-overview-strata12 provides an overview of the number of respondents per strata: 

```{r}
#| label: tbl-overview-strata12
#| code-fold: true
#| tbl-cap: "Frequency table of 12 intersectional strata and number of cases"
#| cap-location: margin

df.geam |>
  data_tabulate(strata12)

```

Given the 12 strata, 3 stratum (or groups) have fewer than 10 respondents - one case even only containing a single respondent. According @evansTutorial2024 (p.4), a lower bound of 10 respondents per stratum has been deemed acceptable. 

For larger strata, @evansTutorial2024 recommend to calculate the percentage of strata that have less than 10 respondents. For the current example, `r low12`% of our strata have less than 10 respondents.



### MAIHDA Models


#### Model 1: simple intersectional model 

The first step of the MAIHDA approach consists of estimating a null model to partition the variance of the outcome (microaggression score) between and within intersectional strata. It is also a measure of clustering, and hence "discriminatory accuracy": the VPC indicates how useful intersectional strata are for classifying individuals with regard to their outcome of interest. The higher the VPC, the greater the similarity among individuals within the strata and the greater the difference between strata to explain the outcome. It thus allows to assess the role of strata membership on the outcome of interest. 

A VPC of 0 indicates that individual strata are not relevant to understand differences in outcome.  

```{r}
#| label: code-maihda-null-model

library(glmmTMB)

#null model, main intersectional model
model_1a <- glmmTMB(microscore ~ 1 + (1 | gender:disability:age_3g), data = df.geam)

# display model parameters
model_parameters(model_1a)

```


```{r}
#| echo: false
#| label: code-maihda-null-model-evans
#| eval: false

# equivalent to Evans Tutorial code. 
library(lme4)
library(merTools)
model1a <- lme4::lmer(microscore ~ (1|strata3), data=df.geam)

summary(model1a)
```

"In the simple intersectional model, the VPC is identical to the intra-class correlation coefficient (ICC), which can be interpreted as the correlation between two randomly selected individuals from the same intersectional stratum." [@kellerEducational2023 p.11]

```{r}
icc(model_1a)
```

Hence, in our example, the VPC / ICC is 5.6% indicating that 6% of the total variance in the outcome is attributable to between strata level differences. The VPC/ICC indicates how useful our intersectional strata are for classifying individuals with regard to the oucome of interest, i.e. their experiences of microaggressions. 

According to  [@axelssonfiskChronic2018], a VPC/ICC vale of 5% is "fair".  

::: column-margin
@axelssonfiskChronic2018 proposes the following cut-off values for VPC/ICC values in percent (%): 
 * nonexistent (0–1)
 * poor (> 1 to ≤ 5)
 * fair (> 5 to ≤ 10)
 * good (> 10 to ≤ 20)
 * very good (> 20 to ≤ 30)
 * excellent (> 30)
:::


#### Model 2: adjusted intersectional model 

The adjusted intersectional model comprises two separate calculations: the adjusted VPC and the PVC.

The adjusted VPC indicates what percentage of the total variance is explained by the interaction effects at the strata level after controlling for the additive main effects that are associated with the social categories.

The adjusted VPC in the intersectional interaction model represents the strata-level variance that is due to interaction effects only. 

```{r}
#| label: code-maihda-adjusted-model
#| 
# model2_gender      <- glmmTMB(microscore ~ gender + (1 | strata12), data = df.geam)
# model2_disability  <- glmmTMB(microscore ~ disability + (1 | strata12), data = df.geam)
# model2_age         <- glmmTMB(microscore ~ age_3g + (1 | strata12), data = df.geam)

# equivalent to
model2_gender      <- glmmTMB(microscore ~ gender + (1 | gender:disability:age_3g), data = df.geam)
model2_disability  <- glmmTMB(microscore ~ disability + (1 | gender:disability:age_3g), data = df.geam)
model2_age         <- glmmTMB(microscore ~ age_3g + (1 | gender:disability:age_3g), data = df.geam)


compare_parameters(model2_gender, model2_disability, model2_age)
```

The regression coefficients provide a first orientation on how strong the different variables affect the outcome. The larger (in absolute values) the coefficients, the higher the contribution of the variable to the between-stratum variance. 

Given the above output, `age` has the lowers contribution (coefficients -0.11, -0.16), followed by `gender` (coefficient 0.08). Disability in contrast has the highest contribution (coefficient 0.24). 


```{r}
icc(model2_gender)$ICC_adjusted
```

```{r}
#| eval: false
icc(model2_disability)$ICC_adjusted
```

```{r}
icc(model2_age)$ICC_adjusted
```


Model 2.1 Proportional Change in between-stratum Variance (PVC). The PCV measures how much between-strata variance observed in the simple intersectional model is explained by additive main effects vs. interaction effects. 

Low PCV values imply that the main effects cannot fully explain the variation in the outcome and that the remaining between-strata variance is due to the existence of interaction effects between the social categories defining the intersectional strata. In contrast, high PCV values indicate that the main effects explain a large proportion of the mean-level differences between intersectional strata in the outcome.

```{r}
#| label: code-maihda-PCV
#| eval: false

# extract random effect variances from all models
v_null       <- get_variance(model_1a)
v_gender     <- get_variance(model2_gender)
v_disability <- get_variance(model2_disability)
v_age        <- get_variance(model2_age)


# PCV (proportional change in between-stratum variance)
# from null-model to gender-model
(v_null$var.random - v_gender$var.random) / v_null$var.random

# PCV from null-model to employment-model
(v_null$var.random - v_disability$var.random) / v_null$var.random

# PCV from null-model to age-model
(v_null$var.random - v_ses$var.random) / v_null$var.random
```


### Difference between strata 

Predict difference between-stratum variance and test for significane. 


```{r}
predictions <- ggeffects::predict_response(
  model_1a,
  c("gender", "disability", "age_3g"),
  type = "random"
)
plot(predictions)
```


```{r}
test_predictions(predictions) |>
  arrange(p.value) |>
  head(20)

```

## References
